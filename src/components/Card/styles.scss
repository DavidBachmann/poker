@import '../../vars';

.Card {
  background-color: #bd1723;
  background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='20' height='12' viewBox='0 0 20 12'%3E%3Cg fill-rule='evenodd'%3E%3Cg id='charlie-brown' fill='%23ffffff' fill-opacity='0.45'%3E%3Cpath d='M9.8 12L0 2.2V.8l10 10 10-10v1.4L10.2 12h-.4zm-4 0L0 6.2V4.8L7.2 12H5.8zm8.4 0L20 6.2V4.8L12.8 12h1.4zM9.8 0l.2.2.2-.2h-.4zm-4 0L10 4.2 14.2 0h-1.4L10 2.8 7.2 0H5.8z'/%3E%3C/g%3E%3C/g%3E%3C/svg%3E");
  border-radius: 3px;
  border: $cardBorder solid #bd1723;
  box-shadow: 0 6px 15px rgba(36,37,38,0.08);
  display: flex;
  flex-direction: column;
  font-size: 0.6rem;
  height: $cardHeight;
  margin: $cardMargin;
  position: relative;
  text-align: center;
  transition: transform 0.25s ease-in-out;
  user-select: none;
  width: $cardWidth;

  &::after {
    content: '';
    position: absolute;
    bottom: 0;
    width: 100%;
    left: 0;
    height: 100%;
    opacity: 0;
    transition: opacity 0.1s;
    box-shadow: 0 0px 40px white;
    z-index: -1;
  }

  // Hero has bigger cards
  .Hero & {
    border-radius: 3px * $heroMultiplier;
    font-size: 0.6rem * $heroMultiplier;
    height: $heroCardHeight;
    margin: $heroCardMargin;
    width: $heroCardWidth;
  }

  // Transform the player's cards up 10px to indicate it's their turn
  .Player.is-next-to-act & {
    transform: translateY(-10px);
    &::after {
      opacity: 1;
    }
  }

  // Remove the transform if the player is next to act _and_ is the winner
  .Player.is-next-to-act.is-winner & {
    transform: none;
  }

  // Remove the 'next-to-act' effect if the player is next to act _and_ is the loser
  .Player.is-next-to-act.is-loser & {
    transform: none;
    &::after {
      opacity: 0;
    }
  }

  // Play win animation if the player in the winner
  .Player.is-winner & {
    animation: win 1.5s ease-in-out infinite;
    box-shadow: 0 6px 15px rgba(255,255,255,0.2), 0 6px 15px rgba(36,37,38,0.08);
    &::after {
      opacity: 1;
    }
  }
}

.Card.is-revealed,
.Card.is-peaked {
  background: linear-gradient(#FFF, #EDEDED);
  border-color: #F6F6F6;
}

.Card-mark {
  display: none;
  position: absolute;
}

.Card.is-revealed .Card-mark,
.Card.is-peaked .Card-mark {
  display: block;
}

.Card-mark:first-child {
  top: 0.25rem;
  left: 0.25rem;

  .Hero & {
    top: 0.25rem * $heroMultiplier;
    left: 0.25rem * $heroMultiplier;
  }
}

.Card-mark:last-child {
  bottom: 0.25rem;
  right: 0.25rem;
  transform: scale(-1);
  transform-origin: center;

  .Hero & {
    bottom: 0.25rem * $heroMultiplier;
    right: 0.25rem * $heroMultiplier;
  }
}

@keyframes win {
  0 {
    transform: translateY(0);
  }
  50% {
    transform: translateY(-5px);
  }
  100% {
    transform: translateY(0);
  }
}
